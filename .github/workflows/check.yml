name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  python:
    name: check on Python
    runs-on: ubuntu-latest
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: checkout
        uses: actions/checkout@v2

      - name: install dependencies
        run: pip install tox pipenv

      - name: run check
        env:
          TOXENV: checkall
        run: tox

      - name: run test
        run: |
          pipenv sync --dev
          tail -n +2 tests/size_list.tsv | xargs -L 1 pipenv run python tests/size_check.py verify

  rust:
    name: check on Rust ${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.rust == 'nightly' }}
        with:
          command: check
          args: --manifest-path rust/Cargo.toml

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.rust == 'nightly' }}
        with:
          command: fmt
          args: --manifest-path rust/Cargo.toml --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.rust == 'nightly' }}
        with:
          command: clippy
          args: --manifest-path rust/Cargo.toml -- -D warnings -W clippy::nursery

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: ${{ matrix.rust == 'nightly' }}
        with:
          command: test
          args: --manifest-path rust/Cargo.toml --release --all-features
